initSidebarItems({"enum":[["Base64Option","C++ type: <span style='color: green;'>```QByteArray::Base64Option```</span>"]],"fn":[["checksum","C++ method: <span style='color: green;'>```quint16 qChecksum(const char* s, unsigned int len)```</span>"],["compress","C++ method: <span style='color: green;'>```qCompress```</span>"],["op_add","C++ method: <span style='color: green;'>```operator+```</span>"],["op_bit_or","C++ method: <span style='color: green;'>```operator|```</span>"],["op_eq","C++ method: <span style='color: green;'>```operator==```</span>"],["op_ge","C++ method: <span style='color: green;'>```operator>=```</span>"],["op_gt","C++ method: <span style='color: green;'>```operator>```</span>"],["op_le","C++ method: <span style='color: green;'>```operator<=```</span>"],["op_lt","C++ method: <span style='color: green;'>```operator<```</span>"],["op_neq","C++ method: <span style='color: green;'>```operator!=```</span>"],["op_shl","C++ method: <span style='color: green;'>```QDataStream& operator<<(QDataStream& arg1, const QByteArray& arg2)```</span>"],["op_shr","C++ method: <span style='color: green;'>```QDataStream& operator>>(QDataStream& arg1, QByteArray& arg2)```</span>"],["qstrcmp","C++ method: <span style='color: green;'>```qstrcmp```</span>"],["qstrcpy","C++ method: <span style='color: green;'>```char* qstrcpy(char* dst, const char* src)```</span>"],["qstrdup","C++ method: <span style='color: green;'>```char* qstrdup(const char* arg1)```</span>"],["qstricmp","C++ method: <span style='color: green;'>```int qstricmp(const char* arg1, const char* arg2)```</span>"],["qstrlen","C++ method: <span style='color: green;'>```unsigned int qstrlen(const char* str)```</span>"],["qstrncmp","C++ method: <span style='color: green;'>```int qstrncmp(const char* str1, const char* str2, unsigned int len)```</span>"],["qstrncpy","C++ method: <span style='color: green;'>```char* qstrncpy(char* dst, const char* src, unsigned int len)```</span>"],["qstrnicmp","C++ method: <span style='color: green;'>```int qstrnicmp(const char* arg1, const char* arg2, unsigned int len)```</span>"],["qstrnlen","C++ method: <span style='color: green;'>```unsigned int qstrnlen(const char* str, unsigned int maxlen)```</span>"],["swap","C++ method: <span style='color: green;'>```void swap(QByteArray& value1, QByteArray& value2)```</span>"],["uncompress","C++ method: <span style='color: green;'>```qUncompress```</span>"]],"mod":[["overloading",""]],"struct":[["ByteArray","C++ type: <span style='color: green;'>```QByteArray```</span>"]]});