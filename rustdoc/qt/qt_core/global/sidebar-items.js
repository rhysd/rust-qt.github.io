initSidebarItems({"fn":[["bad_alloc","C++ method: <span style='color: green;'>```void qBadAlloc()```</span>"],["environment_variable_int_value","C++ method: <span style='color: green;'>```qEnvironmentVariableIntValue```</span>"],["environment_variable_is_empty","C++ method: <span style='color: green;'>```bool qEnvironmentVariableIsEmpty(const char* varName)```</span>"],["environment_variable_is_set","C++ method: <span style='color: green;'>```bool qEnvironmentVariableIsSet(const char* varName)```</span>"],["free_aligned","C++ method: <span style='color: green;'>```void qFreeAligned(void* ptr)```</span>"],["fuzzy_compare","C++ method: <span style='color: green;'>```qFuzzyCompare```</span>"],["fuzzy_is_null","C++ method: <span style='color: green;'>```qFuzzyIsNull```</span>"],["int_cast","C++ method: <span style='color: green;'>```qIntCast```</span>"],["is_null","C++ method: <span style='color: green;'>```qIsNull```</span>"],["malloc_aligned","C++ method: <span style='color: green;'>```void* qMallocAligned(unsigned long size, unsigned long alignment)```</span>"],["qgetenv","C++ method: <span style='color: green;'>```qgetenv```</span>"],["qputenv","C++ method: <span style='color: green;'>```bool qputenv(const char* varName, const QByteArray& value)```</span>"],["qrand","C++ method: <span style='color: green;'>```int qrand()```</span>"],["qsrand","C++ method: <span style='color: green;'>```void qsrand(unsigned int seed)```</span>"],["qt_assert","C++ method: <span style='color: green;'>```void qt_assert(const char* assertion, const char* file, int line)```</span>"],["qt_assert_x","C++ method: <span style='color: green;'>```void qt_assert_x(const char* where, const char* what, const char* file, int line)```</span>"],["qt_check_pointer","C++ method: <span style='color: green;'>```void qt_check_pointer(const char* arg1, int arg2)```</span>"],["qt_error_string","C++ method: <span style='color: green;'>```qt_error_string```</span>"],["qt_noop","C++ method: <span style='color: green;'>```void qt_noop()```</span>"],["qt_tr_id","C++ method: <span style='color: green;'>```qtTrId```</span>"],["qunsetenv","C++ method: <span style='color: green;'>```bool qunsetenv(const char* varName)```</span>"],["realloc_aligned","C++ method: <span style='color: green;'>```void* qReallocAligned(void* ptr, unsigned long size, unsigned long oldsize, unsigned long alignment)```</span>"],["round","C++ method: <span style='color: green;'>```qRound```</span>"],["round64","C++ method: <span style='color: green;'>```qRound64```</span>"],["shared_build","C++ method: <span style='color: green;'>```bool qSharedBuild()```</span>"],["terminate","C++ method: <span style='color: green;'>```void qTerminate()```</span>"],["version","C++ method: <span style='color: green;'>```const char* qVersion()```</span>"]],"mod":[["overloading",""]]});