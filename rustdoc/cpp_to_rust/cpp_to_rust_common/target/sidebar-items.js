initSidebarItems({"enum":[["Arch","CPU architecture, as reported by `target_arch`."],["Condition","Condition on properties of the target. Simple conditions are considered true if the property of the current platform is the same as the associated value of the enum. For example, `Condition::OS(OS::Windows)` will be true on Windows and false otherwise. `And`, `Or` and `Not` variants provide logical operations on nested conditions. `True` and `False` variants provide conditions which are always true and false, respectively."],["Endian","CPU endianness, as reported by `target_endian`."],["Env","Further disambiguates the target platform with information about the ABI/libc, as reported by `target_env`."],["Family","Operating system family, as reported by `target_family`."],["OS","Operating system, as reported by `target_os`."],["PointerWidth","Pointer width in bits, as reported by `target_pointer_width`."]],"fn":[["current_arch","Returns current CPU architecture"],["current_endian","Returns current CPU endianness"],["current_env","Returns current platform disambiguation"],["current_family","Returns current operating system family"],["current_os","Returns current operating system"],["current_pointer_width","Returns current pointer width"],["current_target","Returns properties of the current target"]],"struct":[["Target","Combined information about a target, as reported by configuration values of the Rust compiler."]]});